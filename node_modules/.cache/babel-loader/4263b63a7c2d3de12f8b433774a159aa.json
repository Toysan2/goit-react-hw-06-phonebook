{"ast":null,"code":"var _jsxFileName = \"E:\\\\GoIT\\\\Zad dom\\\\goit-react-hw-06-phonebook\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { addContact } from './store'; // Import actions from store\nimport Filter from './Filter';\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts); // Select contacts from Redux state\n\n  useEffect(() => {\n    const storedContacts = localStorage.getItem('contacts');\n    if (storedContacts) {\n      JSON.parse(storedContacts).forEach(contact => dispatch(addContact(contact)));\n    }\n  }, [dispatch]);\n  const handleAddContact = newContact => {\n    const contact = {\n      id: nanoid(),\n      ...newContact\n    };\n    dispatch(addContact(contact)); // Dispatch action to add contact\n    localStorage.setItem('contacts', JSON.stringify([...contacts, contact]));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n      onSubmit: handleAddContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"SXDjhPuUadeFQ2xFNHNUrUCI1VQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","nanoid","addContact","Filter","ContactForm","ContactList","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","dispatch","contacts","state","storedContacts","localStorage","getItem","JSON","parse","forEach","contact","handleAddContact","newContact","id","setItem","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["E:/GoIT/Zad dom/goit-react-hw-06-phonebook/src/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { nanoid } from 'nanoid';\r\nimport { addContact } from './store'; // Import actions from store\r\nimport Filter from './Filter';\r\nimport ContactForm from './ContactForm';\r\nimport ContactList from './ContactList';\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(state => state.contacts); // Select contacts from Redux state\r\n\r\n  useEffect(() => {\r\n    const storedContacts = localStorage.getItem('contacts');\r\n    if (storedContacts) {\r\n      JSON.parse(storedContacts).forEach(contact =>\r\n        dispatch(addContact(contact))\r\n      );\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const handleAddContact = newContact => {\r\n    const contact = { id: nanoid(), ...newContact };\r\n    dispatch(addContact(contact)); // Dispatch action to add contact\r\n    localStorage.setItem('contacts', JSON.stringify([...contacts, contact]));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onSubmit={handleAddContact} />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,UAAU,QAAQ,SAAS,CAAC,CAAC;AACtC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,QAAQ,GAAGb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACD,QAAQ,CAAC,CAAC,CAAC;;EAEvDf,SAAS,CAAC,MAAM;IACd,MAAMiB,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACvD,IAAIF,cAAc,EAAE;MAClBG,IAAI,CAACC,KAAK,CAACJ,cAAc,CAAC,CAACK,OAAO,CAACC,OAAO,IACxCT,QAAQ,CAACV,UAAU,CAACmB,OAAO,CAAC,CAC9B,CAAC;IACH;EACF,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEd,MAAMU,gBAAgB,GAAGC,UAAU,IAAI;IACrC,MAAMF,OAAO,GAAG;MAAEG,EAAE,EAAEvB,MAAM,CAAC,CAAC;MAAE,GAAGsB;IAAW,CAAC;IAC/CX,QAAQ,CAACV,UAAU,CAACmB,OAAO,CAAC,CAAC,CAAC,CAAC;IAC/BL,YAAY,CAACS,OAAO,CAAC,UAAU,EAAEP,IAAI,CAACQ,SAAS,CAAC,CAAC,GAAGb,QAAQ,EAAEQ,OAAO,CAAC,CAAC,CAAC;EAC1E,CAAC;EAED,oBACEd,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBxB,OAAA,CAACH,WAAW;MAAC4B,QAAQ,EAAEV;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3CxB,OAAA;MAAAoB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBxB,OAAA,CAACJ,MAAM;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVxB,OAAA,CAACF,WAAW;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACf,CAAC;AAEP,CAAC;AAACpB,EAAA,CA5BID,GAAG;EAAA,QACUX,WAAW,EACXC,WAAW;AAAA;AAAAiC,EAAA,GAFxBvB,GAAG;AA8BT,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}