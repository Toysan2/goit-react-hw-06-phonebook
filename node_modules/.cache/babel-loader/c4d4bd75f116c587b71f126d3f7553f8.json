{"ast":null,"code":"import React,{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{actions}from'../store';var addContact=actions.addContact,updateFilter=actions.updateFilter;import ContactForm from'./ContactForm';import ContactList from'./ContactList';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var dispatch=useDispatch();var filter=useSelector(function(state){return state.filter;});useEffect(function(){var storedContacts=localStorage.getItem('contacts');if(storedContacts){JSON.parse(storedContacts).forEach(function(contact){return dispatch(addContact(contact));});}},[dispatch]);var handleFilterChange=function handleFilterChange(event){dispatch(updateFilter(event.currentTarget.value));};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Phonebook\"}),/*#__PURE__*/_jsx(ContactForm,{}),/*#__PURE__*/_jsx(\"h2\",{children:\"Contacts\"}),/*#__PURE__*/_jsx(Filter,{value:filter,onChange:handleFilterChange}),/*#__PURE__*/_jsx(ContactList,{})]});};export default App;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","actions","addContact","updateFilter","ContactForm","ContactList","jsx","_jsx","jsxs","_jsxs","App","dispatch","filter","state","storedContacts","localStorage","getItem","JSON","parse","forEach","contact","handleFilterChange","event","currentTarget","value","children","Filter","onChange"],"sources":["C:/Users/toysa/Documents/GitHub/goit-react-hw-06-phonebook/src/components/App.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { actions } from '../store';\r\nconst { addContact, updateFilter } = actions;\r\nimport ContactForm from './ContactForm';\r\nimport ContactList from './ContactList';\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(state => state.filter);\r\n\r\n  useEffect(() => {\r\n    const storedContacts = localStorage.getItem('contacts');\r\n    if (storedContacts) {\r\n      JSON.parse(storedContacts).forEach(contact =>\r\n        dispatch(addContact(contact))\r\n      );\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const handleFilterChange = event => {\r\n    dispatch(updateFilter(event.currentTarget.value));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter value={filter} onChange={handleFilterChange} />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,OAAO,KAAQ,UAAU,CAClC,GAAQ,CAAAC,UAAU,CAAmBD,OAAO,CAApCC,UAAU,CAAEC,YAAY,CAAKF,OAAO,CAAxBE,YAAY,CAChC,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,CAAAC,WAAW,KAAM,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAExC,GAAM,CAAAC,GAAG,CAAG,QAAN,CAAAA,GAAGA,CAAA,CAAS,CAChB,GAAM,CAAAC,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAC9B,GAAM,CAAAa,MAAM,CAAGZ,WAAW,CAAC,SAAAa,KAAK,QAAI,CAAAA,KAAK,CAACD,MAAM,GAAC,CAEjDd,SAAS,CAAC,UAAM,CACd,GAAM,CAAAgB,cAAc,CAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CACvD,GAAIF,cAAc,CAAE,CAClBG,IAAI,CAACC,KAAK,CAACJ,cAAc,CAAC,CAACK,OAAO,CAAC,SAAAC,OAAO,QACxC,CAAAT,QAAQ,CAACT,UAAU,CAACkB,OAAO,CAAC,CAAC,EAC/B,CAAC,CACH,CACF,CAAC,CAAE,CAACT,QAAQ,CAAC,CAAC,CAEd,GAAM,CAAAU,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAGC,KAAK,CAAI,CAClCX,QAAQ,CAACR,YAAY,CAACmB,KAAK,CAACC,aAAa,CAACC,KAAK,CAAC,CAAC,CACnD,CAAC,CAED,mBACEf,KAAA,QAAAgB,QAAA,eACElB,IAAA,OAAAkB,QAAA,CAAI,WAAS,CAAI,CAAC,cAClBlB,IAAA,CAACH,WAAW,GAAE,CAAC,cACfG,IAAA,OAAAkB,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjBlB,IAAA,CAACmB,MAAM,EAACF,KAAK,CAAEZ,MAAO,CAACe,QAAQ,CAAEN,kBAAmB,CAAE,CAAC,cACvDd,IAAA,CAACF,WAAW,GAAE,CAAC,EACZ,CAAC,CAEV,CAAC,CAED,cAAe,CAAAK,GAAG"},"metadata":{},"sourceType":"module"}