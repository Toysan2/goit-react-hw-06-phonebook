{"ast":null,"code":"var _jsxFileName = \"E:\\\\GoIT\\\\Zad dom\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport Filter from './Filter';\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    const storedContacts = localStorage.getItem('contacts');\n    if (storedContacts) {\n      setContacts(JSON.parse(storedContacts));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n  const addContact = _ref => {\n    let {\n      name,\n      number\n    } = _ref;\n    if (contacts.some(contact => contact.name === name)) {\n      alert(`${name} is already in your contacts.`);\n      return;\n    }\n    const newContact = {\n      id: nanoid(),\n      name,\n      number\n    };\n    setContacts(prevContacts => [...prevContacts, newContact]);\n  };\n  const deleteContact = contactId => {\n    setContacts(prevContacts => prevContacts.filter(contact => contact.id !== contactId));\n  };\n  const handleFilterChange = event => {\n    setFilter(event.currentTarget.value);\n  };\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n  const filteredContacts = getFilteredContacts();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n      onSubmit: addContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      value: filter,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      contacts: filteredContacts,\n      onDeleteContact: deleteContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"egG9UneZTJXjVaFcP/nudS6P+io=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","nanoid","Filter","ContactForm","ContactList","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","filter","setFilter","storedContacts","localStorage","getItem","JSON","parse","setItem","stringify","addContact","_ref","name","number","some","contact","alert","newContact","id","prevContacts","deleteContact","contactId","handleFilterChange","event","currentTarget","value","getFilteredContacts","normalizedFilter","toLowerCase","includes","filteredContacts","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","onDeleteContact","_c","$RefreshReg$"],"sources":["E:/GoIT/Zad dom/goit-react-hw-06-phonebook/src/components/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport Filter from './Filter';\r\nimport ContactForm from './ContactForm';\r\nimport ContactList from './ContactList';\r\n\r\nconst App = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    const storedContacts = localStorage.getItem('contacts');\r\n    if (storedContacts) {\r\n      setContacts(JSON.parse(storedContacts));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const addContact = ({ name, number }) => {\r\n    if (contacts.some(contact => contact.name === name)) {\r\n      alert(`${name} is already in your contacts.`);\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      id: nanoid(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    setContacts(prevContacts => [...prevContacts, newContact]);\r\n  };\r\n\r\n  const deleteContact = contactId => {\r\n    setContacts(prevContacts =>\r\n      prevContacts.filter(contact => contact.id !== contactId)\r\n    );\r\n  };\r\n\r\n  const handleFilterChange = event => {\r\n    setFilter(event.currentTarget.value);\r\n  };\r\n\r\n  const getFilteredContacts = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  const filteredContacts = getFilteredContacts();\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onSubmit={addContact} />\r\n\r\n      <h2>Contacts</h2>\r\n      <Filter value={filter} onChange={handleFilterChange} />\r\n      <ContactList\r\n        contacts={filteredContacts}\r\n        onDeleteContact={deleteContact}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}