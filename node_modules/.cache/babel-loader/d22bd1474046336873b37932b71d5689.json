{"ast":null,"code":"import { createAction, createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, initializeContacts, updateFilter } from './actions';\nconst initialState = {\n  contacts: [],\n  filter: ''\n};\n\n// Reducers using builder callback notation\nconst contactsReducer = createReducer(initialState.contacts, builder => {\n  builder.addCase(initializeContacts, (state, action) => {\n    // Initialize state with contacts from localStorage\n    return action.payload;\n  }).addCase(addContact, (state, action) => {\n    // Logic for adding a contact\n    state.push(action.payload);\n    // Save updated contacts to localStorage\n    localStorage.setItem('contacts', JSON.stringify(state));\n  }).addCase(deleteContact, (state, action) => {\n    // Logic for deleting a contact\n    const newState = state.filter(contact => contact.id !== action.payload);\n    // Save updated contacts to localStorage\n    localStorage.setItem('contacts', JSON.stringify(newState));\n    return newState;\n  });\n});\nconst filterReducer = createReducer(initialState.filter, builder => {\n  builder.addCase(updateFilter, (state, action) => {\n    // Logic for updating filter\n    return action.payload;\n  });\n});\nexport { contactsReducer, filterReducer };","map":{"version":3,"names":["createAction","createReducer","addContact","deleteContact","initializeContacts","updateFilter","initialState","contacts","filter","contactsReducer","builder","addCase","state","action","payload","push","localStorage","setItem","JSON","stringify","newState","contact","id","filterReducer"],"sources":["E:/GoIT/Zad dom/goit-react-hw-06-phonebook/src/redux/reducers.js"],"sourcesContent":["import { createAction, createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContact,\r\n  deleteContact,\r\n  initializeContacts,\r\n  updateFilter,\r\n} from './actions';\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n  filter: '',\r\n};\r\n\r\n// Reducers using builder callback notation\r\nconst contactsReducer = createReducer(initialState.contacts, builder => {\r\n  builder\r\n    .addCase(initializeContacts, (state, action) => {\r\n      // Initialize state with contacts from localStorage\r\n      return action.payload;\r\n    })\r\n    .addCase(addContact, (state, action) => {\r\n      // Logic for adding a contact\r\n      state.push(action.payload);\r\n      // Save updated contacts to localStorage\r\n      localStorage.setItem('contacts', JSON.stringify(state));\r\n    })\r\n    .addCase(deleteContact, (state, action) => {\r\n      // Logic for deleting a contact\r\n      const newState = state.filter(contact => contact.id !== action.payload);\r\n      // Save updated contacts to localStorage\r\n      localStorage.setItem('contacts', JSON.stringify(newState));\r\n      return newState;\r\n    });\r\n});\r\n\r\nconst filterReducer = createReducer(initialState.filter, builder => {\r\n  builder.addCase(updateFilter, (state, action) => {\r\n    // Logic for updating filter\r\n    return action.payload;\r\n  });\r\n});\r\n\r\nexport { contactsReducer, filterReducer };\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,aAAa,QAAQ,kBAAkB;AAC9D,SACEC,UAAU,EACVC,aAAa,EACbC,kBAAkB,EAClBC,YAAY,QACP,WAAW;AAElB,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,MAAM,EAAE;AACV,CAAC;;AAED;AACA,MAAMC,eAAe,GAAGR,aAAa,CAACK,YAAY,CAACC,QAAQ,EAAEG,OAAO,IAAI;EACtEA,OAAO,CACJC,OAAO,CAACP,kBAAkB,EAAE,CAACQ,KAAK,EAAEC,MAAM,KAAK;IAC9C;IACA,OAAOA,MAAM,CAACC,OAAO;EACvB,CAAC,CAAC,CACDH,OAAO,CAACT,UAAU,EAAE,CAACU,KAAK,EAAEC,MAAM,KAAK;IACtC;IACAD,KAAK,CAACG,IAAI,CAACF,MAAM,CAACC,OAAO,CAAC;IAC1B;IACAE,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACP,KAAK,CAAC,CAAC;EACzD,CAAC,CAAC,CACDD,OAAO,CAACR,aAAa,EAAE,CAACS,KAAK,EAAEC,MAAM,KAAK;IACzC;IACA,MAAMO,QAAQ,GAAGR,KAAK,CAACJ,MAAM,CAACa,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKT,MAAM,CAACC,OAAO,CAAC;IACvE;IACAE,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,CAAC;IAC1D,OAAOA,QAAQ;EACjB,CAAC,CAAC;AACN,CAAC,CAAC;AAEF,MAAMG,aAAa,GAAGtB,aAAa,CAACK,YAAY,CAACE,MAAM,EAAEE,OAAO,IAAI;EAClEA,OAAO,CAACC,OAAO,CAACN,YAAY,EAAE,CAACO,KAAK,EAAEC,MAAM,KAAK;IAC/C;IACA,OAAOA,MAAM,CAACC,OAAO;EACvB,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,SAASL,eAAe,EAAEc,aAAa"},"metadata":{},"sourceType":"module"}