{"ast":null,"code":"import{configureStore,createAction,createReducer}from'@reduxjs/toolkit';// Initial state\nvar initialState={contacts:[],filter:''};// Actions\nexport var addContact=createAction('contacts/add');export var deleteContact=createAction('contacts/delete');export var updateFilter=createAction('filter/update');// Reducers using builder callback notation\nvar contactsReducer=createReducer(initialState.contacts,function(builder){builder.addCase(addContact,function(state,action){// Logic for adding a contact\nstate.push(action.payload);}).addCase(deleteContact,function(state,action){// Logic for deleting a contact\nreturn state.filter(function(contact){return contact.id!==action.payload;});});});var filterReducer=createReducer(initialState.filter,function(builder){builder.addCase(updateFilter,function(state,action){// Logic for updating filter\nreturn action.payload;});});// Store\nvar store=configureStore({reducer:{contacts:contactsReducer,filter:filterReducer}});export default store;","map":{"version":3,"names":["configureStore","createAction","createReducer","initialState","contacts","filter","addContact","deleteContact","updateFilter","contactsReducer","builder","addCase","state","action","push","payload","contact","id","filterReducer","store","reducer"],"sources":["E:/GoIT/Zad dom/goit-react-hw-06-phonebook/src/components/Store.jsx"],"sourcesContent":["import { configureStore, createAction, createReducer } from '@reduxjs/toolkit';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  contacts: [],\r\n  filter: '',\r\n};\r\n\r\n// Actions\r\nexport const addContact = createAction('contacts/add');\r\nexport const deleteContact = createAction('contacts/delete');\r\nexport const updateFilter = createAction('filter/update');\r\n\r\n// Reducers using builder callback notation\r\nconst contactsReducer = createReducer(initialState.contacts, builder => {\r\n  builder\r\n    .addCase(addContact, (state, action) => {\r\n      // Logic for adding a contact\r\n      state.push(action.payload);\r\n    })\r\n    .addCase(deleteContact, (state, action) => {\r\n      // Logic for deleting a contact\r\n      return state.filter(contact => contact.id !== action.payload);\r\n    });\r\n});\r\n\r\nconst filterReducer = createReducer(initialState.filter, builder => {\r\n  builder.addCase(updateFilter, (state, action) => {\r\n    // Logic for updating filter\r\n    return action.payload;\r\n  });\r\n});\r\n\r\n// Store\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    filter: filterReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,OAASA,cAAc,CAAEC,YAAY,CAAEC,aAAa,KAAQ,kBAAkB,CAE9E;AACA,GAAM,CAAAC,YAAY,CAAG,CACnBC,QAAQ,CAAE,EAAE,CACZC,MAAM,CAAE,EACV,CAAC,CAED;AACA,MAAO,IAAM,CAAAC,UAAU,CAAGL,YAAY,CAAC,cAAc,CAAC,CACtD,MAAO,IAAM,CAAAM,aAAa,CAAGN,YAAY,CAAC,iBAAiB,CAAC,CAC5D,MAAO,IAAM,CAAAO,YAAY,CAAGP,YAAY,CAAC,eAAe,CAAC,CAEzD;AACA,GAAM,CAAAQ,eAAe,CAAGP,aAAa,CAACC,YAAY,CAACC,QAAQ,CAAE,SAAAM,OAAO,CAAI,CACtEA,OAAO,CACJC,OAAO,CAACL,UAAU,CAAE,SAACM,KAAK,CAAEC,MAAM,CAAK,CACtC;AACAD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC,CAC5B,CAAC,CAAC,CACDJ,OAAO,CAACJ,aAAa,CAAE,SAACK,KAAK,CAAEC,MAAM,CAAK,CACzC;AACA,MAAO,CAAAD,KAAK,CAACP,MAAM,CAAC,SAAAW,OAAO,QAAI,CAAAA,OAAO,CAACC,EAAE,GAAKJ,MAAM,CAACE,OAAO,GAAC,CAC/D,CAAC,CAAC,CACN,CAAC,CAAC,CAEF,GAAM,CAAAG,aAAa,CAAGhB,aAAa,CAACC,YAAY,CAACE,MAAM,CAAE,SAAAK,OAAO,CAAI,CAClEA,OAAO,CAACC,OAAO,CAACH,YAAY,CAAE,SAACI,KAAK,CAAEC,MAAM,CAAK,CAC/C;AACA,MAAO,CAAAA,MAAM,CAACE,OAAO,CACvB,CAAC,CAAC,CACJ,CAAC,CAAC,CAEF;AACA,GAAM,CAAAI,KAAK,CAAGnB,cAAc,CAAC,CAC3BoB,OAAO,CAAE,CACPhB,QAAQ,CAAEK,eAAe,CACzBJ,MAAM,CAAEa,aACV,CACF,CAAC,CAAC,CAEF,cAAe,CAAAC,KAAK"},"metadata":{},"sourceType":"module"}