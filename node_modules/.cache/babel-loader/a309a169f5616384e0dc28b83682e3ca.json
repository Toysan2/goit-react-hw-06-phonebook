{"ast":null,"code":"import { createAction, createReducer } from '@reduxjs/toolkit';\nimport initialState from './path-to-initialState';\nimport { addContact, deleteContact, updateFilter } from './actions';\n\n// Reducers using builder callback notation\nconst contactsReducer = createReducer(initialState.contacts, builder => {\n  builder.addCase(addContact, (state, action) => {\n    // Logic for adding a contact\n    state.push(action.payload);\n  }).addCase(deleteContact, (state, action) => {\n    // Logic for deleting a contact\n    return state.filter(contact => contact.id !== action.payload);\n  });\n});\nconst filterReducer = createReducer(initialState.filter, builder => {\n  builder.addCase(updateFilter, (state, action) => {\n    // Logic for updating filter\n    return action.payload;\n  });\n});\n\n// Store\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    filter: filterReducer\n  }\n});\nexport default store;","map":{"version":3,"names":["createAction","createReducer","initialState","addContact","deleteContact","updateFilter","contactsReducer","contacts","builder","addCase","state","action","push","payload","filter","contact","id","filterReducer","store","configureStore","reducer"],"sources":["C:/Users/toysa/Documents/GitHub/goit-react-hw-06-phonebook/src/reducers.js"],"sourcesContent":["import { createAction, createReducer } from '@reduxjs/toolkit';\nimport initialState from './path-to-initialState';\nimport { addContact, deleteContact, updateFilter } from './actions';\n\n// Reducers using builder callback notation\nconst contactsReducer = createReducer(initialState.contacts, builder => {\n  builder\n    .addCase(addContact, (state, action) => {\n      // Logic for adding a contact\n      state.push(action.payload);\n    })\n    .addCase(deleteContact, (state, action) => {\n      // Logic for deleting a contact\n      return state.filter(contact => contact.id !== action.payload);\n    });\n});\n\nconst filterReducer = createReducer(initialState.filter, builder => {\n  builder.addCase(updateFilter, (state, action) => {\n    // Logic for updating filter\n    return action.payload;\n  });\n});\n\n// Store\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    filter: filterReducer,\n  },\n});\n\nexport default store;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,aAAa,QAAQ,kBAAkB;AAC9D,OAAOC,YAAY,MAAM,wBAAwB;AACjD,SAASC,UAAU,EAAEC,aAAa,EAAEC,YAAY,QAAQ,WAAW;;AAEnE;AACA,MAAMC,eAAe,GAAGL,aAAa,CAACC,YAAY,CAACK,QAAQ,EAAEC,OAAO,IAAI;EACtEA,OAAO,CACJC,OAAO,CAACN,UAAU,EAAE,CAACO,KAAK,EAAEC,MAAM,KAAK;IACtC;IACAD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;EAC5B,CAAC,CAAC,CACDJ,OAAO,CAACL,aAAa,EAAE,CAACM,KAAK,EAAEC,MAAM,KAAK;IACzC;IACA,OAAOD,KAAK,CAACI,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAAC;EAC/D,CAAC,CAAC;AACN,CAAC,CAAC;AAEF,MAAMI,aAAa,GAAGhB,aAAa,CAACC,YAAY,CAACY,MAAM,EAAEN,OAAO,IAAI;EAClEA,OAAO,CAACC,OAAO,CAACJ,YAAY,EAAE,CAACK,KAAK,EAAEC,MAAM,KAAK;IAC/C;IACA,OAAOA,MAAM,CAACE,OAAO;EACvB,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACA,MAAMK,KAAK,GAAGC,cAAc,CAAC;EAC3BC,OAAO,EAAE;IACPb,QAAQ,EAAED,eAAe;IACzBQ,MAAM,EAAEG;EACV;AACF,CAAC,CAAC;AAEF,eAAeC,KAAK"},"metadata":{},"sourceType":"module"}