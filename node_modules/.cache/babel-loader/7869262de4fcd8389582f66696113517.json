{"ast":null,"code":"import { configureStore, createAction, createReducer } from '@reduxjs/toolkit';\n\n// Initial state\nconst initialState = {\n  contacts: [],\n  filter: ''\n};\n\n// Actions\nexport const addContact = createAction('contacts/add');\nexport const deleteContact = createAction('contacts/delete');\nexport const updateFilter = createAction('filter/update');\n\n// Reducers using builder callback notation\nconst contactsReducer = createReducer(initialState.contacts, builder => {\n  builder.addCase(addContact, (state, action) => {\n    // Logic for adding a contact\n    state.push(action.payload);\n  }).addCase(deleteContact, (state, action) => {\n    // Logic for deleting a contact\n    return state.filter(contact => contact.id !== action.payload);\n  });\n});\nconst filterReducer = createReducer(initialState.filter, builder => {\n  builder.addCase(updateFilter, (state, action) => {\n    // Logic for updating filter\n    return action.payload;\n  });\n});\n\n// Store\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    filter: filterReducer\n  }\n});\nexport default store;","map":{"version":3,"names":["configureStore","createAction","createReducer","initialState","contacts","filter","addContact","deleteContact","updateFilter","contactsReducer","builder","addCase","state","action","push","payload","contact","id","filterReducer","store","reducer"],"sources":["E:/GoIT/Zad dom/goit-react-hw-06-phonebook/src/components/Store.jsx"],"sourcesContent":["import { configureStore, createAction, createReducer } from '@reduxjs/toolkit';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  contacts: [],\r\n  filter: '',\r\n};\r\n\r\n// Actions\r\nexport const addContact = createAction('contacts/add');\r\nexport const deleteContact = createAction('contacts/delete');\r\nexport const updateFilter = createAction('filter/update');\r\n\r\n// Reducers using builder callback notation\r\nconst contactsReducer = createReducer(initialState.contacts, builder => {\r\n  builder\r\n    .addCase(addContact, (state, action) => {\r\n      // Logic for adding a contact\r\n      state.push(action.payload);\r\n    })\r\n    .addCase(deleteContact, (state, action) => {\r\n      // Logic for deleting a contact\r\n      return state.filter(contact => contact.id !== action.payload);\r\n    });\r\n});\r\n\r\nconst filterReducer = createReducer(initialState.filter, builder => {\r\n  builder.addCase(updateFilter, (state, action) => {\r\n    // Logic for updating filter\r\n    return action.payload;\r\n  });\r\n});\r\n\r\n// Store\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    filter: filterReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,YAAY,EAAEC,aAAa,QAAQ,kBAAkB;;AAE9E;AACA,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,MAAM,EAAE;AACV,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAGL,YAAY,CAAC,cAAc,CAAC;AACtD,OAAO,MAAMM,aAAa,GAAGN,YAAY,CAAC,iBAAiB,CAAC;AAC5D,OAAO,MAAMO,YAAY,GAAGP,YAAY,CAAC,eAAe,CAAC;;AAEzD;AACA,MAAMQ,eAAe,GAAGP,aAAa,CAACC,YAAY,CAACC,QAAQ,EAAEM,OAAO,IAAI;EACtEA,OAAO,CACJC,OAAO,CAACL,UAAU,EAAE,CAACM,KAAK,EAAEC,MAAM,KAAK;IACtC;IACAD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;EAC5B,CAAC,CAAC,CACDJ,OAAO,CAACJ,aAAa,EAAE,CAACK,KAAK,EAAEC,MAAM,KAAK;IACzC;IACA,OAAOD,KAAK,CAACP,MAAM,CAACW,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKJ,MAAM,CAACE,OAAO,CAAC;EAC/D,CAAC,CAAC;AACN,CAAC,CAAC;AAEF,MAAMG,aAAa,GAAGhB,aAAa,CAACC,YAAY,CAACE,MAAM,EAAEK,OAAO,IAAI;EAClEA,OAAO,CAACC,OAAO,CAACH,YAAY,EAAE,CAACI,KAAK,EAAEC,MAAM,KAAK;IAC/C;IACA,OAAOA,MAAM,CAACE,OAAO;EACvB,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACA,MAAMI,KAAK,GAAGnB,cAAc,CAAC;EAC3BoB,OAAO,EAAE;IACPhB,QAAQ,EAAEK,eAAe;IACzBJ,MAAM,EAAEa;EACV;AACF,CAAC,CAAC;AAEF,eAAeC,KAAK"},"metadata":{},"sourceType":"module"}