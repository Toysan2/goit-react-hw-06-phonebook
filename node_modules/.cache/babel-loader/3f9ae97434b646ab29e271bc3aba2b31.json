{"ast":null,"code":"import { createAction, createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, updateFilter } from './actions';\nconst initialState = {\n  contacts: [],\n  filter: ''\n};\n\n// Reducers using builder callback notation\nconst contactsReducer = createReducer(initialState.contacts, builder => {\n  builder.addCase(addContact, (state, action) => {\n    // Logic for adding a contact\n    state.push(action.payload);\n  }).addCase(deleteContact, (state, action) => {\n    // Logic for deleting a contact\n    return state.filter(contact => contact.id !== action.payload);\n  });\n});\nconst filterReducer = createReducer(initialState.filter, builder => {\n  builder.addCase(updateFilter, (state, action) => {\n    // Logic for updating filter\n    return action.payload;\n  });\n});\n\n// Store\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    filter: filterReducer\n  }\n});\nexport default store;","map":{"version":3,"names":["createAction","createReducer","addContact","deleteContact","updateFilter","initialState","contacts","filter","contactsReducer","builder","addCase","state","action","push","payload","contact","id","filterReducer","store","configureStore","reducer"],"sources":["C:/Users/toysa/Documents/GitHub/goit-react-hw-06-phonebook/src/reducers.js"],"sourcesContent":["import { createAction, createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, updateFilter } from './actions';\n\nconst initialState = {\n  contacts: [],\n  filter: ''\n};\n\n// Reducers using builder callback notation\nconst contactsReducer = createReducer(initialState.contacts, builder => {\n  builder\n    .addCase(addContact, (state, action) => {\n      // Logic for adding a contact\n      state.push(action.payload);\n    })\n    .addCase(deleteContact, (state, action) => {\n      // Logic for deleting a contact\n      return state.filter(contact => contact.id !== action.payload);\n    });\n});\n\nconst filterReducer = createReducer(initialState.filter, builder => {\n  builder.addCase(updateFilter, (state, action) => {\n    // Logic for updating filter\n    return action.payload;\n  });\n});\n\n// Store\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    filter: filterReducer,\n  },\n});\n\nexport default store;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,aAAa,QAAQ,kBAAkB;AAC9D,SAASC,UAAU,EAAEC,aAAa,EAAEC,YAAY,QAAQ,WAAW;AAEnE,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,MAAM,EAAE;AACV,CAAC;;AAED;AACA,MAAMC,eAAe,GAAGP,aAAa,CAACI,YAAY,CAACC,QAAQ,EAAEG,OAAO,IAAI;EACtEA,OAAO,CACJC,OAAO,CAACR,UAAU,EAAE,CAACS,KAAK,EAAEC,MAAM,KAAK;IACtC;IACAD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;EAC5B,CAAC,CAAC,CACDJ,OAAO,CAACP,aAAa,EAAE,CAACQ,KAAK,EAAEC,MAAM,KAAK;IACzC;IACA,OAAOD,KAAK,CAACJ,MAAM,CAACQ,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKJ,MAAM,CAACE,OAAO,CAAC;EAC/D,CAAC,CAAC;AACN,CAAC,CAAC;AAEF,MAAMG,aAAa,GAAGhB,aAAa,CAACI,YAAY,CAACE,MAAM,EAAEE,OAAO,IAAI;EAClEA,OAAO,CAACC,OAAO,CAACN,YAAY,EAAE,CAACO,KAAK,EAAEC,MAAM,KAAK;IAC/C;IACA,OAAOA,MAAM,CAACE,OAAO;EACvB,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACA,MAAMI,KAAK,GAAGC,cAAc,CAAC;EAC3BC,OAAO,EAAE;IACPd,QAAQ,EAAEE,eAAe;IACzBD,MAAM,EAAEU;EACV;AACF,CAAC,CAAC;AAEF,eAAeC,KAAK"},"metadata":{},"sourceType":"module"}